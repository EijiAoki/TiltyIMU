========== Cleanup ==========
Variable register values need to be re-worked to represent which need to be in updated_vars (and so updated post I2C message) and which can be updated on-the-fly (so as to remove them from updated_vars)

Interrupts could be more efficient (arduino goes through an if statement before running the function)

Set it so that a write to the rate register updates the target rate in RPM mode, but the register always reads as the actual rate of the motors.

Direction change in ramping modes should get rid of digitalRead()

PID tuning could be optimized more



========== Features ==========
Add a "kick" of higher power when going from <min_power to any value to get the motor turning

Watchdog checking/handling code (setup works just fine)

Find something to fill the last spot in motor control register

Change data input to read data from a buffer instead of directly from I2C (I2C/Serial/SPI data goes into buffer, buffer gets passed to update functions, buffer is parsed as though data is directly from communications port)



========== Fixes ==========
Needs default register values redefined

delayMillis() timing doesn't work (time interrupt triggers, but counter doesn't seem to increment properly)

Double encoder resolution setting doesn't work, each tick seems to cancel out the previous one

Current sensing is screwy, but that may be a hardware issue